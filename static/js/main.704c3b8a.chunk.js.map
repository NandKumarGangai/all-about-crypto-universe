{"version":3,"sources":["services/cryptoApi.js","services/cryptoNewsApi.js","app/store.js","images/cryptocurrency.png","components/Navbar.jsx","components/Homepage.jsx","components/Exchanges.jsx","components/Cryptocurrencies.jsx","components/LineChart.jsx","components/CryptoDetails.jsx","components/News.jsx","App.js","index.js"],"names":["cryptoApiHeaders","config","options","headers","baseUrl","url","createRequest","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","endpoints","builder","getCryptos","query","count","getCryptoDetails","coinId","getCryptoHistory","timePeriod","getExchanges","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery","useGetExchangesQuery","cryptoNewsApiHeaders","cryptoNewsApi","getCryptoNews","newsCategory","useGetCryptoNewsQuery","configureStore","reducer","Navbar","useState","activeMenu","setActiveMenu","undefined","screenSize","setScreenSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","className","src","icon","size","Title","level","to","onClick","MenuOutlined","theme","Item","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","Typography","Homepage","data","isFetching","globalStats","stats","console","log","span","title","value","total","millify","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","simplified","Text","Panel","Collapse","Exchanges","exchangesList","exchanges","map","exchange","showArrow","header","rank","iconUrl","name","volume","numberOfMarkets","marketShare","id","HTMLReactParser","description","Cryptocurrencies","cryptosList","React","cryptos","setCryptos","searchTerm","setSearchTerm","filtredData","coins","filter","coin","toLowerCase","includes","toLocaleLowerCase","placeholder","onChange","e","target","gutter","currency","xs","sm","lg","extra","alt","hoverable","price","marketCap","change","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","i","history","length","push","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","scales","yAxes","ticks","beginAtZero","Option","Select","CryptoDetails","useParams","setTimePeriod","cryptoDetails","DollarCircleOutlined","NumberOutlined","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfExchanges","approvedSupply","CheckOutlined","StopOutlined","ExclamationCircleOutlined","totalSupply","circulatingSupply","slug","defaultValue","v","option","links","link","type","href","rel","News","setNewsCategory","cryptoNews","showSearch","optionFilterProp","filterOption","input","children","indexOf","news","idx","style","maxWidth","maxHeight","image","thumbnail","contentUrl","substring","provider","moment","datePublished","startOf","fromNow","App","exact","path","color","textAlign","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.704c3b8a.chunk.js","sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\nimport config from '../config/config.json';\r\n\r\nconst cryptoApiHeaders = config[0].options.headers;\r\nconst baseUrl = config[0].options.url;\r\n\r\nconst createRequest = (url) => ({\r\n    url,\r\n    headers: cryptoApiHeaders\r\n});\r\n\r\nexport const cryptoApi = createApi({\r\n    reducerPath: 'cryptoApi',\r\n    baseQuery: fetchBaseQuery({\r\n        baseUrl\r\n    }),\r\n    endpoints: (builder) => ({\r\n        getCryptos: builder.query({\r\n            query: (count) => createRequest(`/coins?limit=${count}`)\r\n        }),\r\n        getCryptoDetails: builder.query({\r\n            query: (coinId) => createRequest(`/coin/${coinId}`)\r\n        }),\r\n        getCryptoHistory: builder.query({\r\n            query: ({ coinId, timePeriod }) => createRequest(`/coin/${coinId}/history/${timePeriod}`)\r\n        }),\r\n        getExchanges: builder.query({\r\n            query: () => createRequest('/exchanges'),\r\n        }),\r\n    })\r\n});\r\n\r\nexport const {\r\n    useGetCryptosQuery,\r\n    useGetCryptoDetailsQuery,\r\n    useGetCryptoHistoryQuery,\r\n    useGetExchangesQuery\r\n} = cryptoApi;","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\nimport config from '../config/config.json';\r\n\r\nconst cryptoNewsApiHeaders = config[1].options.headers;\r\nconst baseUrl = config[1].options.url;\r\n\r\nconst createRequest = (url) => ({\r\n    url,\r\n    headers: cryptoNewsApiHeaders\r\n});\r\n\r\nexport const cryptoNewsApi = createApi({\r\n    reducerPath: 'cryptoNewsApi',\r\n    baseQuery: fetchBaseQuery({\r\n        baseUrl\r\n    }),\r\n    endpoints: (builder) => ({\r\n        getCryptoNews: builder.query({\r\n            query: ({ newsCategory, count }) => createRequest(`/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`)\r\n        })\r\n    })\r\n});\r\n\r\nexport const {\r\n    useGetCryptoNewsQuery,\r\n} = cryptoNewsApi;","import { configureStore } from '@reduxjs/toolkit';\r\nimport { cryptoApi } from '../services/cryptoApi';\r\nimport { cryptoNewsApi } from '../services/cryptoNewsApi';\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        [cryptoApi.reducerPath]: cryptoApi.reducer,\r\n        [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\r\n    },\r\n});","export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import React, { useState, useEffect } from 'react';\r\nimport { Button, Menu, Typography, Avatar } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport { HomeOutlined, MoneyCollectOutlined, BulbOutlined, FundOutlined, MenuOutlined } from '@ant-design/icons';\r\n\r\nimport icon from '../images/cryptocurrency.png';\r\n\r\nconst Navbar = () => {\r\n    const [activeMenu, setActiveMenu] = useState(true);\r\n    const [screenSize, setScreenSize] = useState(undefined);\r\n\r\n    useEffect(() => {\r\n        const handleResize = () => setScreenSize(window.innerWidth);\r\n\r\n        window.addEventListener('resize', handleResize);\r\n\r\n        handleResize();\r\n\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (screenSize <= 800) {\r\n            setActiveMenu(false);\r\n        } else {\r\n            setActiveMenu(true);\r\n        }\r\n    }, [screenSize]);\r\n\r\n    return (\r\n        <div className=\"nav-container\">\r\n            <div className=\"logo-container\">\r\n                <Avatar src={icon} size=\"large\" />\r\n                <Typography.Title level={2} className=\"logo\"><Link to=\"/\">Cryptoverse</Link></Typography.Title>\r\n                <Button className=\"menu-control-container\" onClick={() => setActiveMenu(!activeMenu)}><MenuOutlined /></Button>\r\n            </div>\r\n            {activeMenu && (\r\n                <Menu theme=\"dark\">\r\n                    <Menu.Item icon={<HomeOutlined />}>\r\n                        <Link to=\"/\">Home</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item icon={<FundOutlined />}>\r\n                        <Link to=\"/cryptocurrencies\">Cryptocurrencies</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item icon={<MoneyCollectOutlined />}>\r\n                        <Link to=\"/exchanges\">Exchanges</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item icon={<BulbOutlined />}>\r\n                        <Link to=\"/news\">News</Link>\r\n                    </Menu.Item>\r\n                </Menu>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navbar;","import { Typography, Row, Col, Statistic } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport  millify from 'millify';\r\nimport { useGetCryptosQuery } from '../services/cryptoApi';\r\nimport { Cryptocurrencies, News } from './index';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst Homepage = () => {\r\n    const { data, isFetching } = useGetCryptosQuery(10);\r\n    const globalStats = data?.data?.stats;\r\n\r\n    if (isFetching) {\r\n        return 'Loading...'\r\n    }\r\n    console.log(data)\r\n    return (\r\n        <>\r\n            <Title level={2} className=\"heading\">\r\n                Global Crypto Stats\r\n            </Title>\r\n            <Row>\r\n                <Col span={12} >\r\n                    <Statistic title=\"Total Cryptocurrencies\" value={globalStats.total}></Statistic>\r\n                </Col>\r\n\r\n                <Col span={12}>\r\n                    <Statistic title=\"Total Exchanges\" value={millify(globalStats.totalExchanges)}></Statistic>\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Statistic title=\"Total Market Cap\" value={millify(globalStats.totalMarketCap)}></Statistic>\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Statistic title=\"Total 24h Volume\" value={millify(globalStats.total24hVolume)}></Statistic>\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Statistic title=\"Total Markets\" value={millify(globalStats.totalMarkets)}></Statistic>\r\n                </Col>\r\n            </Row>\r\n            <div className=\"home-heading-container\">\r\n                <Title level={2} className=\"home-title\">\r\n                    Top 10 Cryptocurrencies in the world\r\n                </Title>\r\n                <Title level={3} className=\"show-more\">\r\n                    <Link to=\"/cryptocurrencies\">Show more</Link>\r\n                </Title>\r\n            </div>\r\n            <Cryptocurrencies simplified></Cryptocurrencies>\r\n            <div className=\"home-heading-container\">\r\n                <Title level={2} className=\"home-title\">\r\n                    Latest Crypto news\r\n                </Title>\r\n                <Title level={3} className=\"show-more\">\r\n                    <Link to=\"/news\">Show more</Link>\r\n                </Title>\r\n            </div>\r\n            <News simplified></News>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Homepage\r\n","import React from 'react';\r\nimport millify from 'millify';\r\nimport { Collapse, Row, Col, Typography, Avatar } from 'antd';\r\nimport HTMLReactParser from 'html-react-parser';\r\n\r\nimport { useGetExchangesQuery } from '../services/cryptoApi';\r\n\r\nconst { Text } = Typography;\r\nconst { Panel } = Collapse;\r\n\r\nconst Exchanges = () => {\r\n    const { data, isFetching } = useGetExchangesQuery();\r\n    const exchangesList = data?.data?.exchanges;\r\n\r\n    if (isFetching) return 'Loading...';\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={6}>Exchanges</Col>\r\n                <Col span={6}>24h Trade Volume</Col>\r\n                <Col span={6}>Markets</Col>\r\n                <Col span={6}>Change</Col>\r\n            </Row>\r\n            <Row>\r\n                {exchangesList.map((exchange) => (\r\n                    <Col key={exchange.id + exchange.rank} span={24}>\r\n                        <Collapse>\r\n                            <Panel\r\n                                key={exchange.id}\r\n                                showArrow={false}\r\n                                header={(\r\n                                    <Row key={exchange.id}>\r\n                                        <Col span={6}>\r\n                                            <Text><strong>{exchange.rank}.</strong></Text>\r\n                                            <Avatar className=\"exchange-image\" src={exchange.iconUrl} />\r\n                                            <Text><strong>{exchange.name}</strong></Text>\r\n                                        </Col>\r\n                                        <Col span={6}>${millify(exchange.volume)}</Col>\r\n                                        <Col span={6}>{millify(exchange.numberOfMarkets)}</Col>\r\n                                        <Col span={6}>{millify(exchange.marketShare)}%</Col>\r\n                                    </Row>\r\n                                )}\r\n                            >\r\n                                {HTMLReactParser(exchange.description || '')}\r\n                            </Panel>\r\n                        </Collapse>\r\n                    </Col>\r\n                ))}\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Exchanges\r\n","import millify from 'millify';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Row, Col, Input } from 'antd';\r\n\r\nimport { useGetCryptosQuery } from '../services/cryptoApi';\r\nimport React from 'react';\r\n\r\nconst Cryptocurrencies = ({ simplified }) => {\r\n    const count = simplified ? 10 : 100;\r\n    const { data: cryptosList, isFetching } = useGetCryptosQuery(count);\r\n    const [cryptos, setCryptos] = React.useState([]);\r\n    const [searchTerm, setSearchTerm] = React.useState('');\r\n\r\n    React.useEffect(() => {\r\n        // setCryptos(cryptosList?.data?.coins);\r\n        const filtredData = cryptosList?.data?.coins.filter((coin) => coin.name.toLowerCase().includes(searchTerm.toLocaleLowerCase()));\r\n        setCryptos(filtredData);\r\n    }, [cryptosList, searchTerm]);\r\n\r\n    console.log(cryptos)\r\n\r\n    if (isFetching) return 'Loading....';\r\n\r\n    return (\r\n        <>\r\n            {\r\n                !simplified &&\r\n                <div className=\"search-crypto\">\r\n                    <Input placeholder=\"Search Cryptocurrency\" onChange={e => setSearchTerm(e.target.value)}></Input>\r\n                </div>\r\n            }\r\n            <Row gutter={[32, 32]} className=\"crypto-card-container\">\r\n                {cryptos?.map((currency) => (\r\n                    <Col xs={24} sm={12} lg={6} className=\"crypto-card\" key={currency.id}>\r\n                        <Link key={currency.id} to={`/crypto/${currency.id}`}>\r\n                            <Card title={`${currency.rank}. ${currency.name}`} extra={<img className=\"crypto-image\" src={currency.iconUrl} alt=\"\" />} hoverable>\r\n                                <p>Price: {millify(currency.price)}</p>\r\n                                <p>Market Cap: {millify(currency.marketCap)}</p>\r\n                                <p>Daily Change: {currency.change}%</p>\r\n                            </Card>\r\n                        </Link>\r\n                    </Col>\r\n                ))}\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Cryptocurrencies;\r\n","import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Col, Row, Typography } from 'antd';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\r\n    const coinPrice = [];\r\n    const coinTimestamp = [];\r\n\r\n    for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\r\n        coinPrice.push(coinHistory?.data?.history[i].price);\r\n    }\r\n\r\n    for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\r\n        coinTimestamp.push(new Date(coinHistory?.data?.history[i].timestamp).toLocaleDateString());\r\n    }\r\n\r\n    const data = {\r\n        labels: coinTimestamp,\r\n        datasets: [\r\n            {\r\n                label: 'Price In USD',\r\n                data: coinPrice,\r\n                fill: false,\r\n                backgroundColor: '#0071bd',\r\n                borderColor: '#0071bd',\r\n            },\r\n        ],\r\n    };\r\n\r\n    const options = {\r\n        scales: {\r\n            yAxes: [\r\n                {\r\n                    ticks: {\r\n                        beginAtZero: true,\r\n                    },\r\n                },\r\n            ],\r\n        },\r\n    };\r\n    return (\r\n        <>\r\n            <Row className=\"chart-header\">\r\n                <Title level={2} className=\"chart-title\">\r\n                    {`${coinName} Price Chart`}\r\n                </Title>\r\n                <Col className=\"price-container\">\r\n                    <Title level={5} className=\"price-change\">Change: {coinHistory?.data?.change}%</Title>\r\n                    <Title level={5} className=\"current-price\">Current {coinName} Price: $ {currentPrice}</Title>\r\n                </Col>\r\n            </Row>\r\n            <Line data={data} options={options} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LineChart\r\n","import HTMLReactParser from \"html-react-parser\";\r\nimport { useParams } from 'react-router-dom';\r\nimport millify from \"millify\";\r\nimport { Col, Row, Typography, Select } from 'antd';\r\nimport { MoneyCollectOutlined, DollarCircleOutlined, FundOutlined, ExclamationCircleOutlined, StopOutlined, TrophyOutlined, CheckOutlined, NumberOutlined, ThunderboltOutlined } from '@ant-design/icons';\r\nimport React from \"react\";\r\nimport { useGetCryptoDetailsQuery, useGetCryptoHistoryQuery } from '../services/cryptoApi';\r\nimport LineChart from \"./LineChart\";\r\n\r\nconst { Title, Text } = Typography;\r\nconst { Option } = Select;\r\n\r\nconst CryptoDetails = () => {\r\n    const { coinId } = useParams();\r\n    const [timePeriod, setTimePeriod] = React.useState('7d');\r\n\r\n    const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\r\n    const { data: coinHistory } = useGetCryptoHistoryQuery({ coinId, timePeriod })\r\n\r\n    const cryptoDetails = data?.data?.coin;\r\n    console.log('----', data)\r\n\r\n    if (isFetching) { return 'Loading...' }\r\n\r\n    const time = ['3h', '24h', '7d', '30d', '1y', '3m', '3y', '5y'];\r\n\r\n    const stats = [\r\n        { title: 'Price to USD', value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`, icon: <DollarCircleOutlined /> },\r\n        { title: 'Rank', value: cryptoDetails.rank, icon: <NumberOutlined /> },\r\n        { title: '24h Volume', value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`, icon: <ThunderboltOutlined /> },\r\n        { title: 'Market Cap', value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`, icon: <DollarCircleOutlined /> },\r\n        { title: 'All-time-high(daily avg.)', value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`, icon: <TrophyOutlined /> },\r\n    ];\r\n\r\n    const genericStats = [\r\n        { title: 'Number Of Markets', value: cryptoDetails.numberOfMarkets, icon: <FundOutlined /> },\r\n        { title: 'Number Of Exchanges', value: cryptoDetails.numberOfExchanges, icon: <MoneyCollectOutlined /> },\r\n        { title: 'Aprroved Supply', value: cryptoDetails.approvedSupply ? <CheckOutlined /> : <StopOutlined />, icon: <ExclamationCircleOutlined /> },\r\n        { title: 'Total Supply', value: `$ ${millify(cryptoDetails.totalSupply)}`, icon: <ExclamationCircleOutlined /> },\r\n        { title: 'Circulating Supply', value: `$ ${millify(cryptoDetails.circulatingSupply)}`, icon: <ExclamationCircleOutlined /> },\r\n    ];\r\n\r\n    return (\r\n        <Col className=\"coin-detail-container\">\r\n            <Col className=\"coin-heading-container\">\r\n                <Title level={2} className=\"coin-name\">\r\n                    {`${cryptoDetails?.name} (${cryptoDetails.slug}) Price`}\r\n                </Title>\r\n                <p>\r\n                    {`${cryptoDetails?.name} live price in US dollars. View value statistics, market cap and supply.`}\r\n                </p>\r\n            </Col>\r\n            <Select defaultValue=\"7d\" placeholder=\"Select time period\" className=\"select-timeperiod\"\r\n                onChange={(v) => setTimePeriod(v)}\r\n            >\r\n                {\r\n                    time.map(option => <Option key={option} value={option}>{option}</Option>)\r\n                }\r\n            </Select>\r\n            <LineChart coinHistory={coinHistory} currentPrice={millify(cryptoDetails?.price)} coinName={cryptoDetails?.name} />\r\n            <Col className=\"stats-container\">\r\n                <Col className=\"coin-value-statistics\">\r\n                    <Col className=\"coin-value-statistics-heading\">\r\n                        <Title level={3} className=\"coin-details-heading\">\r\n                            {`${cryptoDetails?.name} Value Statistics`}\r\n                        </Title>\r\n                        <p>\r\n                            {`An overview showing the stats of ${cryptoDetails?.name}`}\r\n                        </p>\r\n                    </Col>\r\n                    {stats.map(({ icon, title, value }) => (\r\n                        <Col className=\"coin-stats\">\r\n                            <Col className=\"coin-stats-name\">\r\n                                <Text>{icon}</Text>\r\n                                <Text>{title}</Text>\r\n                            </Col>\r\n                            <Text className=\"stats\">{value}</Text>\r\n                        </Col>\r\n                    ))}\r\n                </Col>\r\n                <Col className=\"other-stats-info\">\r\n                    <Col className=\"coin-value-statistics-heading\">\r\n                        <Title level={3} className=\"coin-details-heading\">\r\n                            {`Other Statistics`}\r\n                        </Title>\r\n                        <p>\r\n                            {`An overview showing all cryptocurrencies`}\r\n                        </p>\r\n                    </Col>\r\n                    {genericStats.map(({ icon, title, value }) => (\r\n                        <Col className=\"coin-stats\">\r\n                            <Col className=\"coin-stats-name\">\r\n                                <Text>{icon}</Text>\r\n                                <Text>{title}</Text>\r\n                            </Col>\r\n                            <Text className=\"stats\">{value}</Text>\r\n                        </Col>\r\n                    ))}\r\n                </Col>\r\n            </Col>\r\n            <Col className=\"coin-desk-link\">\r\n                <Row className=\"coin-desk\">\r\n                    <Title level={3} className=\"coin-details-heading\">\r\n                        {`What is ${cryptoDetails?.name} ?`}\r\n                    </Title>\r\n                    {HTMLReactParser(cryptoDetails?.description)}\r\n                </Row>\r\n                <Col className=\"coin-links\">\r\n                    <Title className=\"coin-details-heading\">\r\n                        {`${cryptoDetails?.name} Links`}\r\n                    </Title>\r\n                    {cryptoDetails.links?.map((link) => (\r\n                        <Row className=\"coin-link\" key={link.name}>\r\n                            <Title level={5} className=\"link-name\">{link.type}</Title>\r\n                            <a href={link.url} target=\"_blank\" rel=\"noreferrer\">{link.name}</a>\r\n                        </Row>\r\n                    ))}\r\n                </Col>\r\n            </Col>\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default CryptoDetails\r\n","import React from 'react';\r\nimport { Select, Typography, Row, Col, Avatar, Card } from 'antd';\r\nimport moment from 'moment';\r\nimport { useGetCryptoNewsQuery } from '../services/cryptoNewsApi';\r\nimport { useGetCryptosQuery } from '../services/cryptoApi';\r\n\r\nconst { Text, Title } = Typography;\r\nconst { Option } = Select;\r\n\r\nconst News = ({ simplified }) => {\r\n    const [newsCategory, setNewsCategory] = React.useState('Cryptocurrency');\r\n    const { data: cryptoNews } = useGetCryptoNewsQuery({ newsCategory, count: simplified ? 10 : 100 });\r\n    const { data } = useGetCryptosQuery(100);\r\n    if (!cryptoNews?.value) {\r\n        return 'Loading....'\r\n    }\r\n    console.log('----', cryptoNews)\r\n    return (\r\n        <Row gutter={[24, 24]}>\r\n            {\r\n                !simplified && (\r\n                    <Col span={24}>\r\n                        <Select\r\n                            showSearch\r\n                            className=\"select-news\"\r\n                            placeholder=\"Select a Crypto\"\r\n                            optionFilterProp=\"children\"\r\n                            onChange={value => setNewsCategory(value)}\r\n                            filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                        >\r\n                            <Option value=\"Cryptocurrency\">\r\n                                Cryptocurrency\r\n                            </Option>\r\n                            {\r\n                                data?.data?.coins?.map( coin => <Option value={coin.name} key={coin.name}>{coin.name}</Option>)\r\n                            }\r\n                        </Select>\r\n                    </Col>\r\n                )\r\n            }\r\n            {cryptoNews?.value?.map((news, idx) => (\r\n                <Col xs={24} sm={12} lg={6} key={idx}>\r\n                    <Card className=\"news-card\" hoverable>\r\n                        <a href={news.url} target=\"_blank\" rel=\"noreferrer\">\r\n                            <div className=\"news-image-container\">\r\n                                <Title className=\"news-title\" level={5}>\r\n                                    {news?.name}\r\n                                </Title>\r\n                                <img style={{ maxWidth: '200px', maxHeight: '100px' }} src={news?.image?.thumbnail?.contentUrl} alt={news?.name}></img>\r\n                            </div>\r\n                            <p>\r\n                                {\r\n                                    news?.description?.length > 100 ? `${news?.description?.substring(0, 100)} ...` : news?.description\r\n                                }\r\n                            </p>\r\n                            <div className=\"provider-container\">\r\n                                <div>\r\n                                    <Avatar src={news?.provider[0]?.image?.thumbnail?.contentUrl} alt={news?.name}></Avatar>\r\n                                    <Text className=\"provider-name\">{news?.provider[0]?.name}</Text>\r\n                                </div>\r\n                                <Text>{moment(news?.datePublished).startOf('ss').fromNow()}</Text>\r\n                            </div>\r\n                        </a>\r\n                    </Card>\r\n                </Col>\r\n            ))}\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default News\r\n","import { Switch, Route, Link } from 'react-router-dom';\nimport { Typography, Layout, Space } from 'antd'\nimport './App.css';\n\nimport {\n  Navbar,\n  Homepage,\n  Exchanges,\n  Cryptocurrencies,\n  CryptoDetails,\n  News\n} from './components'\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <div className=\"navbar\">\n        <Navbar />\n      </div>\n      <div className=\"main\">\n        <Layout>\n          <div className=\"routes\">\n            <Switch>\n              <Route exact path={[\"/\", \"/all-about-crypto-universe\"]}>\n                <Homepage></Homepage>\n              </Route>\n              <Route exact path=\"/exchanges\">\n                <Exchanges></Exchanges>\n              </Route>\n              <Route exact path=\"/cryptocurrencies\">\n                <Cryptocurrencies></Cryptocurrencies>\n              </Route>\n              <Route exact path=\"/crypto/:coinId\">\n                <CryptoDetails></CryptoDetails>\n              </Route>\n              <Route exact path=\"/news\">\n                <News></News>\n              </Route>\n            </Switch>\n          </div>\n        </Layout>\n      \n      <div className=\"footer\">\n        <Typography.Title level={5} style={{ color: \"white\", textAlign: \"center\"}}>\n          Crypto Universe <br />\n          All rights reserved.\n        </Typography.Title>\n        <Space>\n          <Link to=\"/\">Home</Link>\n          <Link to=\"/exchanges\">Exchanges</Link>\n          <Link to=\"/news\">News</Link>\n        </Space>\n      </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './app/store';\nimport App from './App';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}